{"ast":null,"code":"var _jsxFileName = \"/Users/amaduswaray/Desktop/Tech-Colledge/react-workshop/src/App.tsx\",\n  _s = $RefreshSig$();\nimport { Button, Box, CircularProgress, Autocomplete, TextField } from \"@mui/material\";\nimport { useState } from \"react\";\nimport Recipe from \"./Components/Recipe\";\nimport ScentOptions from \"./Scents.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [recipe, setRecipe] = useState({});\n  const [toLoad, setLoad] = useState(false);\n  const [ingredients, setIngredients] = useState([]);\n  const func1 = () => {\n    console.log(\"Hello World!\");\n    getRecipe();\n    setLoad(true);\n  };\n  function loading() {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this);\n  }\n  async function getRecipe() {\n    const requestBody = JSON.stringify({\n      ingredients: ingredients\n    });\n    await fetch('http://localhost:8000/recipes', {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: requestBody\n    }).then(response => response.json()).then(data => {\n      setRecipe(data);\n      setLoad(false);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Le Perfum\\xE9 Merci\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          backgroundImage: `url($Image)`,\n          backgroundSize: \"cover\",\n          height: \"30vh\",\n          opacity: 0.35\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        children: \"Pick a scents you wish to have\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n        multiple: true,\n        filterSelectedOptions: true,\n        disableCloseOnSelect: true,\n        options: ScentOptions,\n        onChange: (event, newValue) => {\n          setIngredients(newValue);\n        },\n        renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n          ...params,\n          label: \"ingredients\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: func1,\n        children: \"Show me the magic\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this), toLoad && loading(), recipe.title && /*#__PURE__*/_jsxDEV(Recipe, {\n        title: recipe.title,\n        description: recipe.description,\n        ingredients: recipe.ingredients,\n        steps: recipe.steps\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"O4Zvog3fJ8Ca8EoBn902sDeJJn0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Button","Box","CircularProgress","Autocomplete","TextField","useState","Recipe","ScentOptions","App","recipe","setRecipe","toLoad","setLoad","ingredients","setIngredients","func1","console","log","getRecipe","loading","requestBody","JSON","stringify","fetch","method","headers","body","then","response","json","data","backgroundImage","backgroundSize","height","opacity","event","newValue","params","title","description","steps"],"sources":["/Users/amaduswaray/Desktop/Tech-Colledge/react-workshop/src/App.tsx"],"sourcesContent":["import { Button, Box, CircularProgress, Autocomplete, TextField } from \"@mui/material\";\nimport { useState } from \"react\";\nimport Recipe, {RecipeData} from \"./Components/Recipe\";\nimport IngredientOptions from \"./Ingredients.json\";\nimport ScentOptions from \"./Scents.json\";\nimport Image from './files/background.jpg';\n\n\n\n\n\nfunction App() {\n\n    const [recipe, setRecipe] = useState({} as RecipeData)\n    const [toLoad, setLoad] = useState(false)\n    const [ingredients, setIngredients] = useState([] as string[])\n\n    const func1 = () => {\n        console.log(\"Hello World!\");\n        getRecipe()\n        setLoad(true)\n    }\n\n    function loading(){\n        return(\n            <Box>\n                <CircularProgress></CircularProgress>\n            </Box>\n            \n        )\n    }\n\n    async function getRecipe() {\n\n        const requestBody = JSON.stringify({\n            ingredients:  ingredients\n                \n        })\n\n        await fetch('http://localhost:8000/recipes', {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: requestBody,\n            })\n            .then((response) => response.json())\n            .then((data) => {setRecipe(data)\n                            setLoad(false)\n                            });\n\n            \n\n    }\n\n    \n\n    \n\n\n    return (\n        <>\n        <div>\n            <h1>Le Perfum√© Merci</h1>\n            <Box sx={{\n                backgroundImage: `url($Image)`,\n                backgroundSize: \"cover\",\n                height: \"30vh\",\n                opacity: 0.35,\n                }}/> \n            \n            <Box>Pick a scents you wish to have</Box>\n\n            <Autocomplete\n                multiple\n                filterSelectedOptions\n                disableCloseOnSelect\n                options={ScentOptions}\n                onChange={(event: any, newValue: string[]) =>{\n                    setIngredients(newValue);\n                }}\n                renderInput={(params) => (\n                    <TextField {...params} label=\"ingredients\" />\n                )\n            }\n            />\n\n            <Button onClick={func1}>Show me the magic</Button>\n\n            {toLoad &&\n                loading()\n            }\n\n            {recipe.title &&\n                <Recipe \n                title={recipe.title}\n                description={recipe.description}\n                ingredients={recipe.ingredients}\n                steps={recipe.steps}\n                />\n\n            }\n\n        </div>\n        </>\n    );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,MAAM,EAAEC,GAAG,EAAEC,gBAAgB,EAAEC,YAAY,EAAEC,SAAS,QAAQ,eAAe;AACtF,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,MAAM,MAAoB,qBAAqB;AAEtD,OAAOC,YAAY,MAAM,eAAe;AAAC;AAAA;AAOzC,SAASC,GAAG,GAAG;EAAA;EAEX,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGL,QAAQ,CAAC,CAAC,CAAC,CAAe;EACtD,MAAM,CAACM,MAAM,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EACzC,MAAM,CAACQ,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAa;EAE9D,MAAMU,KAAK,GAAG,MAAM;IAChBC,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;IAC3BC,SAAS,EAAE;IACXN,OAAO,CAAC,IAAI,CAAC;EACjB,CAAC;EAED,SAASO,OAAO,GAAE;IACd,oBACI,QAAC,GAAG;MAAA,uBACA,QAAC,gBAAgB;QAAA;QAAA;QAAA;MAAA;IAAoB;MAAA;MAAA;MAAA;IAAA,QACnC;EAGd;EAEA,eAAeD,SAAS,GAAG;IAEvB,MAAME,WAAW,GAAGC,IAAI,CAACC,SAAS,CAAC;MAC/BT,WAAW,EAAGA;IAElB,CAAC,CAAC;IAEF,MAAMU,KAAK,CAAC,+BAA+B,EAAE;MACzCC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEN;IACN,CAAC,CAAC,CACDO,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MAACpB,SAAS,CAACoB,IAAI,CAAC;MAChBlB,OAAO,CAAC,KAAK,CAAC;IACd,CAAC,CAAC;EAI1B;EAOA,oBACI;IAAA,uBACA;MAAA,wBACI;QAAA,UAAI;MAAgB;QAAA;QAAA;QAAA;MAAA,QAAK,eACzB,QAAC,GAAG;QAAC,EAAE,EAAE;UACLmB,eAAe,EAAG,aAAY;UAC9BC,cAAc,EAAE,OAAO;UACvBC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;QACT;MAAE;QAAA;QAAA;QAAA;MAAA,QAAE,eAER,QAAC,GAAG;QAAA,UAAC;MAA8B;QAAA;QAAA;QAAA;MAAA,QAAM,eAEzC,QAAC,YAAY;QACT,QAAQ;QACR,qBAAqB;QACrB,oBAAoB;QACpB,OAAO,EAAE3B,YAAa;QACtB,QAAQ,EAAE,CAAC4B,KAAU,EAAEC,QAAkB,KAAI;UACzCtB,cAAc,CAACsB,QAAQ,CAAC;QAC5B,CAAE;QACF,WAAW,EAAGC,MAAM,iBAChB,QAAC,SAAS;UAAA,GAAKA,MAAM;UAAE,KAAK,EAAC;QAAa;UAAA;UAAA;UAAA;QAAA;MAEjD;QAAA;QAAA;QAAA;MAAA,QACC,eAEF,QAAC,MAAM;QAAC,OAAO,EAAEtB,KAAM;QAAA,UAAC;MAAiB;QAAA;QAAA;QAAA;MAAA,QAAS,EAEjDJ,MAAM,IACHQ,OAAO,EAAE,EAGZV,MAAM,CAAC6B,KAAK,iBACT,QAAC,MAAM;QACP,KAAK,EAAE7B,MAAM,CAAC6B,KAAM;QACpB,WAAW,EAAE7B,MAAM,CAAC8B,WAAY;QAChC,WAAW,EAAE9B,MAAM,CAACI,WAAY;QAChC,KAAK,EAAEJ,MAAM,CAAC+B;MAAM;QAAA;QAAA;QAAA;MAAA,QAClB;IAAA;MAAA;MAAA;MAAA;IAAA;EAIJ,iBACH;AAEX;AAAC,GA/FQhC,GAAG;AAAA,KAAHA,GAAG;AAiGZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}