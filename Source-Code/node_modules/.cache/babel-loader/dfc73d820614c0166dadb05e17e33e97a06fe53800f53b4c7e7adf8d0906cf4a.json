{"ast":null,"code":"var _jsxFileName = \"/Users/amaduswaray/Desktop/Tech-Colledge/react-workshop/src/App.tsx\",\n  _s = $RefreshSig$();\nimport { Button, Box, CircularProgress } from \"@mui/material\";\nimport { useState } from \"react\";\nimport Recipe from \"./Components/Recipe\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [recipe, setRecipe] = useState({});\n  const [toLoad, setLoad] = useState(false);\n  const func1 = () => {\n    console.log(\"Hello World!\");\n    getRecipe();\n    setLoad(true);\n  };\n  function loading() {\n    return /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this);\n  }\n  async function getRecipe() {\n    const requestBody = JSON.stringify({\n      ingredients: [\"tomato\", \"mozzarella\", \"basil\", \"chocolate pasta\", \"olive oil\"]\n    });\n    await fetch('http://localhost:8000/recipes', {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: requestBody\n    }).then(response => response.json()).then(data => setRecipe(data));\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Le Perfum\\xE9 Merci\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        children: \" Le Contamine\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: func1,\n        children: \"Pew\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this), recipe.title && /*#__PURE__*/_jsxDEV(Recipe, {\n        title: recipe.title,\n        description: recipe.description,\n        ingredients: recipe.ingredients,\n        steps: recipe.steps\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"oeZaLoju3sxifNou3vKaIYkwGsQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Button","Box","CircularProgress","useState","Recipe","App","recipe","setRecipe","toLoad","setLoad","func1","console","log","getRecipe","loading","requestBody","JSON","stringify","ingredients","fetch","method","headers","body","then","response","json","data","title","description","steps"],"sources":["/Users/amaduswaray/Desktop/Tech-Colledge/react-workshop/src/App.tsx"],"sourcesContent":["import { Button, Box, CircularProgress } from \"@mui/material\";\nimport { useState } from \"react\";\nimport Recipe, {RecipeData} from \"./Components/Recipe\";\n\n\n\n\n\nfunction App() {\n\n    const [recipe, setRecipe] = useState({} as RecipeData)\n    const [toLoad, setLoad] = useState(false)\n\n    const func1 = () => {\n        console.log(\"Hello World!\");\n        getRecipe()\n        setLoad(true)\n    }\n\n    function loading(){\n        return(\n            <CircularProgress></CircularProgress>\n        )\n    }\n\n    async function getRecipe() {\n\n        const requestBody = JSON.stringify({\n            ingredients: [\n                \"tomato\",\n                \"mozzarella\",\n                \"basil\",\n                \"chocolate pasta\",\n                \"olive oil\"\n            ]\n        })\n\n        await fetch('http://localhost:8000/recipes', {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: requestBody,\n            })\n            .then((response) => response.json())\n            .then((data) => setRecipe(data));\n\n    }\n\n    \n\n    \n\n\n    return (\n        <>\n        <div>\n            <h1>Le Perfum√© Merci</h1>\n            <Box> Le Contamine</Box>\n            <Button onClick={func1}>Pew</Button>\n\n            {recipe.title &&\n                <Recipe \n                title={recipe.title}\n                description={recipe.description}\n                ingredients={recipe.ingredients}\n                steps={recipe.steps}\n                />\n\n            }\n\n        </div>\n        </>\n    );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,MAAM,EAAEC,GAAG,EAAEC,gBAAgB,QAAQ,eAAe;AAC7D,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,MAAM,MAAoB,qBAAqB;AAAC;AAAA;AAMvD,SAASC,GAAG,GAAG;EAAA;EAEX,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGJ,QAAQ,CAAC,CAAC,CAAC,CAAe;EACtD,MAAM,CAACK,MAAM,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EAEzC,MAAMO,KAAK,GAAG,MAAM;IAChBC,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;IAC3BC,SAAS,EAAE;IACXJ,OAAO,CAAC,IAAI,CAAC;EACjB,CAAC;EAED,SAASK,OAAO,GAAE;IACd,oBACI,QAAC,gBAAgB;MAAA;MAAA;MAAA;IAAA,QAAoB;EAE7C;EAEA,eAAeD,SAAS,GAAG;IAEvB,MAAME,WAAW,GAAGC,IAAI,CAACC,SAAS,CAAC;MAC/BC,WAAW,EAAE,CACT,QAAQ,EACR,YAAY,EACZ,OAAO,EACP,iBAAiB,EACjB,WAAW;IAEnB,CAAC,CAAC;IAEF,MAAMC,KAAK,CAAC,+BAA+B,EAAE;MACzCC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEP;IACN,CAAC,CAAC,CACDQ,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAKnB,SAAS,CAACmB,IAAI,CAAC,CAAC;EAExC;EAOA,oBACI;IAAA,uBACA;MAAA,wBACI;QAAA,UAAI;MAAgB;QAAA;QAAA;QAAA;MAAA,QAAK,eACzB,QAAC,GAAG;QAAA,UAAC;MAAa;QAAA;QAAA;QAAA;MAAA,QAAM,eACxB,QAAC,MAAM;QAAC,OAAO,EAAEhB,KAAM;QAAA,UAAC;MAAG;QAAA;QAAA;QAAA;MAAA,QAAS,EAEnCJ,MAAM,CAACqB,KAAK,iBACT,QAAC,MAAM;QACP,KAAK,EAAErB,MAAM,CAACqB,KAAM;QACpB,WAAW,EAAErB,MAAM,CAACsB,WAAY;QAChC,WAAW,EAAEtB,MAAM,CAACY,WAAY;QAChC,KAAK,EAAEZ,MAAM,CAACuB;MAAM;QAAA;QAAA;QAAA;MAAA,QAClB;IAAA;MAAA;MAAA;MAAA;IAAA;EAIJ,iBACH;AAEX;AAAC,GAlEQxB,GAAG;AAAA,KAAHA,GAAG;AAoEZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}